{"version":3,"file":"static/js/122.a7ad6c52.chunk.js","mappings":"uQAEeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,+EACkB,mCACVC,EAAe,IAAIC,gBAAgB,CACvCC,QAFc,mCAGdC,SAAU,UAENC,EAAU,CAAEC,QAAS,CAAEC,OAAQ,qBANvC,SAOeC,EAAAA,EAAAA,IAAA,qCACmBR,EADnB,YACkCC,GAC7CI,GATJ,0GAaA,M,SAb4B,GAAbN,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,ECDf,EAAuB,8BAAvB,EAA8D,gCAA9D,EAAsG,+BAAtG,EAAsJ,wC,SCmFtJ,EA9EyB,WAAO,IAAD,EACvBU,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOjB,EAAP,KAAqBkB,EAArB,KACMC,EAAK,UAAGnB,EAAaoB,IAAI,gBAApB,QAAgC,GACrCC,EAAU,oDAAgDF,EAAhD,iBAA8DN,GAmC9E,OAjBAS,EAAAA,EAAAA,YAAU,WACa,KAAjBH,EAAMI,QAIVzB,EAAauB,GACVG,MAAK,SAAAC,GACJ,MAAuCA,EAASC,KAAxCb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,YACvBhB,GAAU,SAAAiB,GAAS,wBAAQA,IAAR,OAAsBF,GAAtB,IACnBb,EAAQD,GACRG,EAAcY,EACf,IACAE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,GAAE,CAACb,EAAYF,EAAON,KAGrB,iCACE,kBAAMsB,UAAWC,EAAUC,SAnCV,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,cAAcC,SAASC,MAAMC,MAGtD,GAFAhC,EAAU,KAEL4B,EACH,OAAOtB,EAAgB,CAAC,GAG1BA,EAAgB,CAAEC,MAAOqB,GAC1B,EAyBG,WACE,mBAAQL,UAAWC,EAAYS,KAAK,YAEpC,kBACEV,UAAWC,EACXU,KAAK,QACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,sBAGhB,wBACGtC,EAAOuC,OAAS,GACfvC,EAAOwC,KAAI,SAAAC,GACT,IAAQC,EAAuBD,EAAvBC,eAAgBC,EAAOF,EAAPE,GACxB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMjD,GAAlC,UACE,0BAAO6C,OAFFC,EAMZ,MAEJvC,EAAa,GAAKF,IAASE,IAC1B,mBAAQ8B,KAAK,SAASa,QAjDX,WACf5C,GAAQ,SAAA6C,GAAI,OAAIA,EAAO,CAAX,GACb,EA+C8CxB,UAAWC,EAApD,yBAMP,C","sources":["Api/searchMovies.jsx","webpack://react-homework-template/./src/components/SearchMoviePage/SearchMoviePage.module.css?1f05","components/SearchMoviePage/SearchMoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function searchMovies(searchQuery) {\n  const API_KEY = '510d6b02ed225a51e009d13f1b3c4d4c';\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n  });\n  const options = { headers: { accept: 'application/json' } };\n  return await axios.get(\n    `https://api.themoviedb.org/${searchQuery}&${searchParams}`,\n    options\n  );\n}\n\nexport default searchMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchMoviePage_form__sxhHj\",\"button\":\"SearchMoviePage_button__Kiefa\",\"input\":\"SearchMoviePage_input__s-aLp\",\"loadMoreButton\":\"SearchMoviePage_loadMoreButton__NTZ89\"};","import { useLocation, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport searchMovies from 'Api/searchMovies';\nimport css from './SearchMoviePage.module.css';\n\nconst SearchMoviesPage = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const MOVIES_URL = `3/search/movie?&include_adult=false&query=${query}&page=${page}`;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searcQuery = event.currentTarget.elements.input.value;\n    setMovies([]);\n\n    if (!searcQuery) {\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query: searcQuery });\n  };\n\n  const loadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  useEffect(() => {\n    if (query.trim() === '') {\n      return;\n    }\n\n    searchMovies(MOVIES_URL)\n      .then(response => {\n        const { page, results, total_pages } = response.data;\n        setMovies(prevState => [...prevState, ...results]);\n        setPage(page);\n        setTotalPages(total_pages);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [MOVIES_URL, query, page]);\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <button className={css.button} type=\"submit\"></button>\n\n        <input\n          className={css.input}\n          name=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n      </form>\n      <ul>\n        {movies.length > 0 &&\n          movies.map(movie => {\n            const { original_title, id } = movie;\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  <span>{original_title}</span>\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n      {totalPages > 1 && page !== totalPages && (\n        <button type=\"button\" onClick={loadMore} className={css.loadMoreButton}>\n          Load More\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default SearchMoviesPage;\n"],"names":["searchMovies","searchQuery","searchParams","URLSearchParams","api_key","language","options","headers","accept","axios","location","useLocation","useState","movies","setMovies","page","setPage","totalPages","setTotalPages","useSearchParams","setSearchParams","query","get","MOVIES_URL","useEffect","trim","then","response","data","results","total_pages","prevState","catch","error","console","log","message","className","css","onSubmit","event","preventDefault","searcQuery","currentTarget","elements","input","value","type","name","autoComplete","autoFocus","placeholder","length","map","movie","original_title","id","to","state","from","onClick","prev"],"sourceRoot":""}