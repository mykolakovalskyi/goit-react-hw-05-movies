{"version":3,"file":"static/js/186.e05c34a8.chunk.js","mappings":"qKAMMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAJe,6BAKfC,QAAS,CAAEC,OAAQ,oBACnBC,OAAQ,CACNC,QARY,mCASZC,SAAU,WAICC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAuBC,GAAvB,0FAEiBT,EAASU,IAAT,WAAiBD,IAFlC,wEAIIE,QAAQC,IAAR,MAJJ,+EAQA,IAjBA,SASuB,GAARJ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,kHC6Bf,UAxCgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAW,kBAAcF,EAAd,YAejB,OAbAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAI,mCAAG,+FACLZ,EAAAA,EAAAA,GAAQU,GACXG,MAAK,SAAAC,GACJP,GAAW,OAAIO,EAASC,KAAKC,SAC9B,IACAC,OAAM,SAAAC,GACLf,QAAQC,IAAIc,EAAMC,QACnB,IAPQ,2CAAH,qDASVP,GACD,GAAE,CAACF,KAGF,wBACsB,IAAnBJ,EAAQc,QACP,qEAEAd,EACGe,QAAO,SAACC,EAAQC,GAAT,OAAmBA,EAAQ,EAA3B,IACPC,KAAI,SAAAF,GACH,IAAQG,EAAgCH,EAAhCG,GAAIC,EAA4BJ,EAA5BI,eAAgBC,EAAYL,EAAZK,QACpBC,EAAaF,EAAbE,SACR,OACE,2BACE,wBAAKA,KACL,uBAAID,MAFGF,EAKZ,KAIV,C","sources":["Api/getData.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '510d6b02ed225a51e009d13f1b3c4d4c';\nconst BASE_URL = 'https://api.themoviedb.org';\n///const options = { headers: { accept: 'application/json' } };\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: { accept: 'application/json' },\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nasync function getData(url) {\n  try {\n    return await instance.get(`/${url}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default getData;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getData from 'Api/getData';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const REVIEWS_URL = `3/movie/${movieId}/reviews`;\n\n  useEffect(() => {\n    const func = async () => {\n      await getData(REVIEWS_URL)\n        .then(response => {\n          setReviews([...response.data.results]);\n        })\n        .catch(error => {\n          console.log(error.message);\n        });\n    };\n    func();\n  }, [REVIEWS_URL]);\n\n  return (\n    <ul>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        reviews\n          .filter((review, index) => index < 10)\n          .map(review => {\n            const { id, author_details, content } = review;\n            const { username } = author_details;\n            return (\n              <li key={id}>\n                <h3>{username}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","headers","accept","params","api_key","language","getData","url","get","console","log","useState","reviews","setReviews","movieId","useParams","REVIEWS_URL","useEffect","func","then","response","data","results","catch","error","message","length","filter","review","index","map","id","author_details","content","username"],"sourceRoot":""}