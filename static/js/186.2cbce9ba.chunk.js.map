{"version":3,"file":"static/js/186.2cbce9ba.chunk.js","mappings":"8KAEeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAuBC,GAAvB,+EACkB,mCACVC,EAAe,IAAIC,gBAAgB,CACvCC,QAFc,mCAGdC,SAAU,UAENC,EAAU,CAAEC,QAAS,CAAEC,OAAQ,qBANvC,SAOeC,EAAAA,EAAAA,IAAA,qCACmBR,EADnB,YACkCC,GAC7CI,GATJ,0GAaA,I,SAbuB,GAARN,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,uFCuCf,UArCgB,WACd,OAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAW,kBAAcF,EAAd,YAYjB,OAVAG,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,GAAQe,GACLE,MAAK,SAAAC,GACJN,GAAW,OAAIM,EAASC,KAAKC,SAC9B,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,GAAE,CAACV,KAGF,wBACsB,IAAnBJ,EAAQe,QACP,qEAEAf,EACGgB,QAAO,SAACC,EAAQC,GAAT,OAAmBA,EAAQ,EAA3B,IACPC,KAAI,SAAAF,GACH,IAAQG,EAAgCH,EAAhCG,GAAIC,EAA4BJ,EAA5BI,eAAgBC,EAAYL,EAAZK,QACpBC,EAAaF,EAAbE,SACR,OACE,2BACE,wBAAKA,KACL,uBAAID,MAFGF,EAKZ,KAIV,C","sources":["Api/getData.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function getData(searchQuery) {\n  const API_KEY = '510d6b02ed225a51e009d13f1b3c4d4c';\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n  });\n  const options = { headers: { accept: 'application/json' } };\n  return await axios.get(\n    `https://api.themoviedb.org/${searchQuery}?${searchParams}`,\n    options\n  );\n}\n\nexport default getData;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getData from 'Api/getData';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const REVIEWS_URL = `3/movie/${movieId}/reviews`;\n\n  useEffect(() => {\n    getData(REVIEWS_URL)\n      .then(response => {\n        setReviews([...response.data.results]);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [REVIEWS_URL]);\n\n  return (\n    <ul>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        reviews\n          .filter((review, index) => index < 10)\n          .map(review => {\n            const { id, author_details, content } = review;\n            const { username } = author_details;\n            return (\n              <li key={id}>\n                <h3>{username}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["getData","searchQuery","searchParams","URLSearchParams","api_key","language","options","headers","accept","axios","useState","reviews","setReviews","movieId","useParams","REVIEWS_URL","useEffect","then","response","data","results","catch","error","console","log","message","length","filter","review","index","map","id","author_details","content","username"],"sourceRoot":""}