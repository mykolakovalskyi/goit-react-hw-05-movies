{"version":3,"file":"static/js/180.3cbe6869.chunk.js","mappings":"qKAKMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHe,6BAIfC,QAAS,CAAEC,OAAQ,oBACnBC,OAAQ,CACNC,QAPY,mCAQZC,SAAU,WAICC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAuBC,GAAvB,0FAEiBT,EAASU,IAAT,WAAiBD,IAFlC,wEAIIE,QAAQC,IAAR,MAJJ,+EAQA,IAjBA,SASuB,GAARJ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,uJCbf,EAAuB,8BAAvB,EAA8D,gCAA9D,EAAsG,+BAAtG,EAAsJ,wC,SCsFtJ,EAjFyB,WAAO,IAAD,EACvBK,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAab,IAAI,gBAApB,QAAgC,GACrCgB,EAAU,oDAAgDD,EAAhD,iBAA8DP,GAsC9E,OApBAS,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAI,mCAAG,iFACU,KAAjBH,EAAMI,OADC,kEAKLrB,EAAAA,EAAAA,GAAQkB,GACXI,MAAK,SAAAC,GACJ,MAAuCA,EAASC,KAAxCd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,YACvBjB,GAAU,SAAAkB,GAAS,wBAAQA,IAAR,OAAsBF,GAAtB,IACnBd,EAAQD,GACRG,EAAca,EACf,IACAE,OAAM,SAAAC,GACL1B,QAAQC,IAAIyB,EAAMC,QACnB,IAdQ,2CAAH,qDAgBVV,GACD,GAAE,CAACF,EAAYD,EAAOP,KAGrB,iCACE,kBAAMqB,UAAWC,EAAUC,SAtCV,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,cAAcC,SAASC,MAAMC,MAGtD,GAFA/B,EAAU,KAEL2B,EACH,OAAOpB,EAAgB,CAAC,GAG1BA,EAAgB,CAAEC,MAAOmB,GAC1B,EA4BG,WACE,mBAAQL,UAAWC,EAAYS,KAAK,YAEpC,kBACEV,UAAWC,EACXU,KAAK,QACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,sBAGhB,wBACGrC,EAAOsC,OAAS,GACftC,EAAOuC,KAAI,SAAAC,GACT,IAAQC,EAAuBD,EAAvBC,eAAgBC,EAAOF,EAAPE,GACxB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMhD,GAAlC,UACE,0BAAO4C,OAFFC,EAMZ,MAEJtC,EAAa,GAAKF,IAASE,IAC1B,mBAAQ6B,KAAK,SAASa,QApDX,WACf3C,GAAQ,SAAA4C,GAAI,OAAIA,EAAO,CAAX,GACb,EAkD8CxB,UAAWC,EAApD,yBAMP,C","sources":["Api/getData.jsx","webpack://react-homework-template/./src/components/SearchMoviePage/SearchMoviePage.module.css?1f05","components/SearchMoviePage/SearchMoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '510d6b02ed225a51e009d13f1b3c4d4c';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: { accept: 'application/json' },\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nasync function getData(url) {\n  try {\n    return await instance.get(`/${url}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default getData;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchMoviePage_form__sxhHj\",\"button\":\"SearchMoviePage_button__Kiefa\",\"input\":\"SearchMoviePage_input__s-aLp\",\"loadMoreButton\":\"SearchMoviePage_loadMoreButton__NTZ89\"};","import { useLocation, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport getData from 'Api/getData';\nimport css from './SearchMoviePage.module.css';\n\nconst SearchMoviesPage = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const MOVIES_URL = `3/search/movie?&include_adult=false&query=${query}&page=${page}`;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searcQuery = event.currentTarget.elements.input.value;\n    setMovies([]);\n\n    if (!searcQuery) {\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query: searcQuery });\n  };\n\n  const loadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  useEffect(() => {\n    const func = async () => {\n      if (query.trim() === '') {\n        return;\n      }\n\n      await getData(MOVIES_URL)\n        .then(response => {\n          const { page, results, total_pages } = response.data;\n          setMovies(prevState => [...prevState, ...results]);\n          setPage(page);\n          setTotalPages(total_pages);\n        })\n        .catch(error => {\n          console.log(error.message);\n        });\n    };\n    func();\n  }, [MOVIES_URL, query, page]);\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <button className={css.button} type=\"submit\"></button>\n\n        <input\n          className={css.input}\n          name=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n      </form>\n      <ul>\n        {movies.length > 0 &&\n          movies.map(movie => {\n            const { original_title, id } = movie;\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  <span>{original_title}</span>\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n      {totalPages > 1 && page !== totalPages && (\n        <button type=\"button\" onClick={loadMore} className={css.loadMoreButton}>\n          Load More\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default SearchMoviesPage;\n"],"names":["instance","axios","baseURL","headers","accept","params","api_key","language","getData","url","get","console","log","location","useLocation","useState","movies","setMovies","page","setPage","totalPages","setTotalPages","useSearchParams","searchParams","setSearchParams","query","MOVIES_URL","useEffect","func","trim","then","response","data","results","total_pages","prevState","catch","error","message","className","css","onSubmit","event","preventDefault","searcQuery","currentTarget","elements","input","value","type","name","autoComplete","autoFocus","placeholder","length","map","movie","original_title","id","to","state","from","onClick","prev"],"sourceRoot":""}