{"version":3,"file":"static/js/247.651ad164.chunk.js","mappings":"qKAKMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHe,6BAIfC,QAAS,CAAEC,OAAQ,oBACnBC,OAAQ,CACNC,QAPY,mCAQZC,SAAU,WAICC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAuBC,GAAvB,0FAEiBT,EAASU,IAAT,WAAiBD,IAFlC,wEAIIE,QAAQC,IAAR,MAJJ,+EAQA,IAjBA,SASuB,GAARJ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,kHC6Bf,UAvCa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAQ,kBAAcF,EAAd,YAed,OAbAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAI,mCAAG,+FACLZ,EAAAA,EAAAA,GAAQU,GACXG,MAAK,SAAAC,GACJP,GAAQ,OAAIO,EAASC,KAAKT,MAC3B,IACAU,OAAM,SAAAC,GACLC,MAAMD,EAAME,QACb,IAPQ,2CAAH,qDASVP,GACD,GAAE,CAACF,KAGF,wBACGJ,EAAKc,KAAI,SAAAC,GACR,IAAQC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAC1BC,EAAU,yCAAqCH,GAErD,OACE,2BACE,gBAAKI,IAAKD,EAAYE,IAAKJ,KAC3B,4BACE,kCAAUA,MACV,uCAAeC,UAJVH,EAQZ,KAGN,C","sources":["Api/getData.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '510d6b02ed225a51e009d13f1b3c4d4c';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: { accept: 'application/json' },\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nasync function getData(url) {\n  try {\n    return await instance.get(`/${url}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default getData;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getData from 'Api/getData';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  const CAST_URL = `3/movie/${movieId}/credits`;\n\n  useEffect(() => {\n    const func = async () => {\n      await getData(CAST_URL)\n        .then(response => {\n          setCast([...response.data.cast]);\n        })\n        .catch(error => {\n          alert(error.message);\n        });\n    };\n    func();\n  }, [CAST_URL]);\n\n  return (\n    <ul>\n      {cast.map(actor => {\n        const { id, profile_path, name, character } = actor;\n        const castMember = `http://image.tmdb.org/t/p/w200/${profile_path}`;\n\n        return (\n          <li key={id}>\n            <img src={castMember} alt={name} />\n            <div>\n              <p>Name: {name}</p>\n              <p>Character: {character}</p>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["instance","axios","baseURL","headers","accept","params","api_key","language","getData","url","get","console","log","useState","cast","setCast","movieId","useParams","CAST_URL","useEffect","func","then","response","data","catch","error","alert","message","map","actor","id","profile_path","name","character","castMember","src","alt"],"sourceRoot":""}